//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: Mount&Blade 1.011 - options.dat
//   Authors: Swyter
//    E-mail: swyterzone+mab@gmail.com
//   Version: 2022.03.21
//   Purpose: Opens the M&B 1.011 binary settings file (%appdata%/Mount&Blade/options.dat)
//  Category: Game
// File Mask: options.dat
//------------------------------------------------

LittleEndian();

enum bool { no, yes };

struct options_t
{
    float music_volume; /* swy: from 0.f to 1.f */
    float sound_volume; /* swy: from 0.f to 1.f */

    float mouse_sensitivity;  /* swy: from 0.f to 1.f */
    bool invert_mouse_y_axis; /* swy: 01 00 00 00     */

    bool dynamic_lighting,
         particle_systems;

    uint __unk__one;

    bool character_shadows;

    uint __unk__one;

    enum { corpses_none, corpses_5, corpses_10, corpses_20, corpses_40, corpses_unlimited } number_of_corpses;
    uint grass_density; /* swy: 0-100 */
    enum { cs_slower, cs_normal, cs_fast } combat_speed;
    enum { ff_reduced_to_1_over_2_easiest, ff_reduced_to_3_over_4_easy, ff_normal } damage_to_friends;

    uint __unk__zero;

    enum { ia_good, ia_average_caps, ia_poor } combat_ai;

    enum { pd_reduced_to_1_over_4_easiest, pd_reduced_to_1_over_2_easy, pd_normal } damage_to_player;

    bool show_names_of_friend_troops,
         show_targeting_reticule,
         show_attack_direction,

         report_damage,
         report_shot_difficulty;

    /* swy: slider goes from 0.0f (= 25) to 1.0f (= 100) e.g. 2000.0f (=  150025),
                                                                -0.5f (= -    13),
                                                                -1.0f (= -    50),
                                                                -2.0f (= -   125),
                                                                 2.0f (=     175),
                                                                 0.5f (=      62)
            so yeah, the remapping function seems to be:   floor(25 + (float_val  * (100 - 25)))
              to go from in-game value to float do this:  (floor(final_val) - 25) / (100 - 25)    */
    typedef float battle_size_t <read=( Str("%lg", Floor(        25 + (this * (100.0f - 25.0f) ))) ),
                                write=(    this = (Floor(Atof(value)) - 25) / (100.0f - 25.0f)     )>;

    battle_size_t battle_size;

    enum { ad_by_relative_enemy_position, ad_by_mouse_movement, ad_by_inverse_mouse_movement } control_attack_direction;
    enum { bd_automatic_recommended,      bd_by_mouse_movement                               } control_block_direction;

    bool anisotropic_filtering,
         environment_shadows;

    bool report_casualties,
         report_experience;

    enum { ps_none, ps_quick, ps_full                  } realistic_shadows_on_plants;
    enum { rg_0, rg_1, rg_3, rg_5, rg_10, rg_unlimited } number_of_ragdolls;

    float gamma; /* swy: from 1.50 to 2.50; this field is probably the only one actually clamped/limited in range */
    float character_detail, character_shadow_detail; /* 0.0 to 1.0 = 0% to 100% */
    enum { blood_no, blood_near_player, blood_yes } blood;
} options;