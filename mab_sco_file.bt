//------------------------------------------------
//--- 010 Editor v10.0 Binary Template
//
//      File: Mount&Blade Scene Object file
//   Authors: Swyter
//   Version: 2020.06.17
//   Purpose: Opens scene files on M&B 1.011 and Warband
//  Category: Game
// File Mask: *.sco
//  ID Bytes: 33 FD FF FF
//   History: 
//------------------------------------------------

LittleEndian();

struct
{
    char magic[4];
    int  version;
    int  object_count;
} head <open=true>;

struct obj
{
    enum <uint32> 
    {
        Prop    = 0, /* Scene Prop */
        Entry   = 1, /* Entry Point */
        Item    = 2, /* Item Kind */
        Plant   = 4, /* Flora */
        Passage = 5
    } type;

    uint32 id;
    enum <uint32>
    {
        Const_MB = 0x930F6C4,
        Const_WB = 0x94AEF80
    } unk <format=hex>;
    float mtx_row_a[3]; /* affine matrix; encodes rotation */
    float mtx_row_b[3];
    float mtx_row_c[3];
    float pos[3]; /* translation; x, y, z */
    uint32 str_size;
    char str[str_size];
    uint32 entry_no;
    uint32 menu_item_no;
    float scale[3]; /* scaling multiplier, per axis; x, y, z*/
} objects[head.object_count] <optimize=false,read=sceneprop__Read>;



uint32 tag;
uint32 id;
struct
{
    float a;
    float b;
    float height;
} ss[id];


uint32 ido;
struct
{
    uint32 a;
    uint32 b;
    uint32 c;
    uint32 d;
    uint32 e;
} tt[ido];


uint32 ide;
uint32 yy[ide * 10];     

uint32 idu;


FSeek(0xe8f5); // tldmod\SceneObj\scn_cair_andros_center.sco
//FSeek(0x83d8); // MountBlade Warband\Modules\Native\SceneObj\scn_town_13_center.sco
struct
{
    char magic[4]; /* ¦ÑJÿ */
    uint32 a;
    uint32 b;
    uint32 c;
    uint32 da;

    struct named_block
    {
        uint32 index;
        uint32 str_size;
        char str[str_size];
        uint32 enabled;
        if (enabled)
        {
            struct {
            uint32 elem_thing;
            uint32 elem_count;
            char elem[elem_count];
            } blockb[600] <optimize=false>;
        }
    } block[b] <optimize=false>;
} thing;



string UIntToStr(unsigned int e)
{
    string s; SPrintf(s, "%d", e); return s;
}

string sceneprop__Read(struct obj &m)
{
         if (m.type == Prop ||
             m.type == Item ||
             m.type == Plant)   return EnumToString(m.type) + " -- " + m.str;
    else if (m.type == Entry)   return EnumToString(m.type) + " point ["  + UIntToStr(m.entry_no) + "]";
    else if (m.type == Passage) return EnumToString(m.type) + " for menu item " + UIntToStr(m.menu_item_no);
    else                        return EnumToString(m.type);
};