name: Zip it up
on:
  push:
jobs:
  build-lnx:
    name: Linux
    runs-on: ubuntu-latest
    permissions:
      contents: write 
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
      
    - name: Install dependencies
      run: | 
        # swy: absolutely braindead breakage: https://github.com/actions/runner-images/issues/4589#issuecomment-1260157764
        sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
        sudo apt-get update -qq
        sudo apt-get remove -qq libmono* moby* mono* nginx* php* libgdiplus libpcre2-posix3 libzip4

        sudo apt-get update
        sudo apt-get upgrade    

        sudo dpkg --add-architecture i386
        
        sudo apt-get update
        sudo apt-get upgrade
        
        sudo apt install wine32  -yy --force-yes

        sudo apt install --install-recommends xvfb tree flip curl unzip lsof jq -yy --force-yes
        sudo apt install p7zip

    - name: Pack things up
      id: pack
      run: |
        git fetch --unshallow || git fetch --all
        # swy: find the previous run from the same type that is not us
        prev_run_shas="`curl -s --location --fail 'https://api.github.com/repos/swyter/mab-tools/actions/runs' | jq -r '.workflow_runs[] | select(.name | test("Zip it up")) | select(.id != '$GITHUB_RUN_ID') | .head_sha'`"
        echo -ne "[i] previous run revisions:\n$prev_run_shas\n\n"
        prev_run_sha="`echo "$prev_run_shas" | head -n1`"
        echo "prev=$prev_run_sha cur=`git rev-parse --short HEAD`"
    
        # swy: only pack it when the folder has changed since the last time we ran a GitHub Actions job or there's a !force keyword in the last commit message
        if [[ ! -z "$(git diff --quiet HEAD "$prev_run_sha" -- mab_sco_*.py mab_sco_drag_and_drop_here.cmd || echo changed)" || "$(git rev-list --format=%B --max-count=1 HEAD | grep --count --ignore-case --max-count=1 '!force')" -ge 1 ]]; then
          # swy: add a dummy screen for Wine to proceed headless, dial down the Wine log spam
          #      we need Wine to run the Windows version of PyInstaller to turn the .py into a self-contained .exe
          Xvfb :1 -screen 0 800x600x16 &
          export DISPLAY=:1
          export WINEDLLOVERRIDES="mscoree,mshtml="
          export WINEDEBUG=fixme-all
          
          WINEARCH=win32 wineboot -u

          # swy: newer versions of Python don't really seem to install properly under Wine; we could also use the embedded version and install pip on top by removing the python310._pth file from the extracted .zip first
          curl -LO https://www.python.org/ftp/python/3.8.9/python-3.8.9.exe
          wine python-3.8.9.exe /quiet InstallAllUsers=1 PrependPath=1 Include_test=0 Include_launcher=0 Include_tcltk=0
          
          # swy: make upx work
          curl -LO https://github.com/upx/upx/releases/download/v3.96/upx-3.96-win32.zip
          unzip -o upx-*-win32.zip && mv upx-*-win32/upx.exe . && rm -rf upx-*
          
          # swy: make strip work, sourced from the official mingw-w64 package
          curl -L -o mingw.7z https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Personal%20Builds/mingw-builds/8.1.0/threads-win32/sjlj/i686-8.1.0-release-win32-sjlj-rt_v6-rev0.7z/download
          7z e mingw.7z mingw32/bin/strip.exe # swy: extract into the current folder; don't recreate the original folder structure
          rm mingw.7z && sudo cp strip.exe ~/.wine/drive_c/windows/system32/strip.exe
          
          wine pip install pyinstaller
          
          # swy: fix a weird Wine exception on win32api.EnumResourceTypes when the PE file doesn't have any resource, we can ignore it
          sed -i 's/raise exception/pass/' ~/.wine/drive_c/Program\ Files/Python38-32/Lib/site-packages/PyInstaller/utils/win32/winresource.py
          
          wine pyinstaller mab_sco_unpack.py           --icon NONE --onefile --upx-dir . --strip
          wine pyinstaller mab_sco_unpacked_reindex.py --icon NONE --onefile --upx-dir . --strip
          wine pyinstaller mab_sco_repack.py           --icon NONE --onefile --upx-dir . --strip
          
          # swy: PyInstaller drops the final .exe in a ./dist subfolder, go inside, zip them and go back
          pushd dist && 7z a "../swy-sco-tools-$(date +%Y.%m.%d-%H.%M -u).zip" mab_sco_*.exe ../mab_sco_drag_and_drop_here.cmd && popd
        else
          echo "[no changes in the add-on folder this time around; skipped]"
        fi

    - name: Upload Release Asset
      id: upload-release-asset
      run: |
        owner="swyter"; repo="mab-tools"; release_id="78295290"
        
        FILENAME="$(basename "$(find . -name '*tools*.zip' | sort -r -u | head -n 1)")"
        GH_ASSET="https://uploads.github.com/repos/$owner/$repo/releases/$release_id/assets?name=$FILENAME"
        echo "$GH_ASSET"; echo "$FILENAME"
        
        if [[ -f "$FILENAME" ]]; then
          curl --fail --location --data-binary @"$FILENAME" -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' -H "Content-Type: application/octet-stream" "$GH_ASSET"
        else
          echo "[no changes in the add-on folder this time around; skipped]"
        fi
