//------------------------------------------------
//--- 010 Editor v10.0 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

LittleEndian();

struct
{
    char magic[4];
    int ver;
    int spr_count;
} head;

struct spr_t
{
    enum <uint32> 
    {
        Prop = 0,
        Entry = 1,
        Item = 2
    } type;

    uint32 id;
    uint32 unk  <format=hex>;
    float c[9];
    struct 
    {
        float x,y,z;    
    } pos;
    int str_size;
    char str[str_size];//[0x15];
    uint32 entry_no_a;
    uint32 entry_no_b;
    float scale[3];
} spr[head.spr_count] <optimize=false,read=sceneprop__Read>;

uint32 tag;
uint32 id;
float ss[id*3];


uint32 ido;
uint32 tt[ido * 5];            

uint32 ide;
uint32 yy[ide * 5];     

uint32 idu;


string sceneprop__Read(struct spr_t &m)
{
    if (m.type == Prop || m.type == Item)
        return EnumToString(m.type) + " -- " + m.str;
    else
        return EnumToString(m.type) + " ** ";
};